/*
 * EmergentMUD - A modern MUD with a procedurally generated world.
 * Copyright (C) 2016 BoneVM, LLC
 *
 * This file is part of EmergentMUD.
 *
 * EmergentMUD is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * EmergentMUD is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

group 'com.emergentmud'
version '0.1.0'

apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'docker'
apply plugin: 'net.saliman.cobertura'
apply plugin: 'info.solidsoft.pitest'

sourceCompatibility = 1.8

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'se.transmode.gradle:gradle-docker:1.2'
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.3.3.RELEASE'
        classpath 'net.saliman:gradle-cobertura-plugin:2.3.1'
        classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.1.9'
    }
}

repositories {
    mavenCentral()
}

configurations.compile {
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
}

dependencies {
    compile 'javax.inject:javax.inject:1'
    compile 'joda-time:joda-time:2.9.3'

    compile 'org.webjars:webjars-locator:0.30'
    compile 'org.webjars:jquery:2.1.1'
    compile 'org.webjars:bootstrap:3.2.0'
    compile 'org.webjars:font-awesome:4.5.0'

    compile 'org.springframework.boot:spring-boot-starter:1.3.3.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-web:1.3.3.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-jetty:1.3.3.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-freemarker:1.3.3.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-websocket:1.3.3.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-security:1.3.3.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-data-mongodb:1.3.3.RELEASE'

    compile 'org.springframework.security.oauth:spring-security-oauth2:2.0.9.RELEASE'

    compile 'org.springframework.session:spring-session-data-redis:1.1.1.RELEASE'

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-all:1.10.19'
}

task buildDocker(type: Docker, dependsOn: build) {
    push = false
    applicationName = jar.getBaseName()
    dockerfile = file('src/main/docker/Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}

cobertura {
    coverageCheckTotalLineRate = 70
    coverageCheckTotalBranchRate = 70
    coverageExcludes = [
            ".*com.emergentmud.core.EmergentMUD",
            ".*com.emergentmud.core.config.*"
    ]
}

pitest {
    excludedClasses = [
            "com.emergentmud.core.EmergentMUD",
            "com.emergentmud.core.config.*"
    ]
    coverageThreshold = 70
    mutationThreshold = 70
    timestampedReports = false
}

test.finalizedBy project.tasks.cobertura
test.finalizedBy project.tasks.pitest